{
    "title": "Idiomatic monads in Rust | varkor’s blog",
    "url": "https://varkor.github.io/blog/2019/03/28/idiomatic-monads-in-rust.html#fnref:external-iterator",
    "createdAt": "2019-05-02T14:02:10.373Z",
    "description": "A pragmatic new design for high-level abstractions Monads (and, more generally, constructs known as “higher kinded types”) are a tool for high-level abstraction in programming languages1. Historically, there has been a lot of debate inside (and outside) the Rust community about whether monads would be a useful abstraction to have in the language. I’m not concerned with that here. You see, there’s a problem with talking about whether monads would be useful or not, and it’s this: there are a large number of design challenges to overcome to have any hope of implementing them at all — to the best of my knowledge, there currently exists no realistic (that is, practical) design for monads in Rust. In fact, there are so many obstacles that some people express doubt that it’s even possible. Strictly speaking, they’re a lot more than that, but we’re only interested in the programming angle here. ↩",
    "siteName": "varkor’s blog",
    "keywords": [],
    "canonical": "https://varkor.github.io/blog/2019/03/28/idiomatic-monads-in-rust.html"
}
