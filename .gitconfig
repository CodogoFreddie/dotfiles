[user]
	name = Freddie Ridell
	email = contact@freddieridell.com

[alias]
	bb = "bisect bad"
	bg = "bisect good"
	chore = "!f() { git commit -am \"chore($1): $2\"; }; f"
	clean-branches = !git remote prune origin && git branch --merged >/tmp/merged-branches && $EDITOR /tmp/merged-branches && xargs git branch -d </tmp/merged-branches
	d = difftool
	difff = diff -w
	diffff = diff -w --word-diff
	feat = "!f() { git commit -am \"feat($1): $2\"; }; f"
	fix = "!f() { git commit -am \"fix($1): $2\"; }; f"
	graph = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	jira = "! gitJira"
	logg = log --decorate --stat
	perf = "!f() { git commit -am \"perf($1): $2\"; }; f"
	rc = "rebase --continue"
	refactor = "!f() { git commit -am \"refactor($1): $2\"; }; f"
	rebase = "rebase --autosquash"
	style = "!f() { git commit -am \"style($1): $2\"; }; f"
	temp = "!f() { git commit -am \"temp($1): $2\"; }; f"
	whoops = !git add --all && git commit --amend
	wip = "commit --all --fixup HEAD --no-verify"

[difftool]
	prompt = false

[diff]
	tool = nvimdiff
	algorithm = minimal

[difftool "nvimdiff"]
	cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""

[merge]
	tool = vimdiff
[mergetool]
	prompt = true
[mergetool "vimdiff"]
	cmd = nvim -d $REMOTE $BASE $LOCAL $MERGED -c '$wincmd w' -c 'wincmd J'

[core]
	editor = nvim -d 
	shell = /usr/bin/zsh

[push]
	default = simple
	followTags = true

[status]
	showUntrackedFiles = all
[color]
	ui = always
[receive]
	denyCurrentBranch = ignore
[pull]
	rebase = true
[rebase]
	autoStash = true
	autoSquash = true

